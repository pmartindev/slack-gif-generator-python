Flask-Dance Example App: Slack Edition
=======================================

This repository provides an example of how to use `Flask-Dance`_ to write a
simple `Slack`_ integration. The example code is in ``slack.py`` --
all the other files in this repository are secondary. You can run this example
code locally, or deploy it to Heroku for free to see how it runs in a
production-style environment.

Heroku Installation
```````````````````
`Heroku`_ is a great way to get up and running fast, and you don't even need
to open the terminal!

Step 1: Deploy to Heroku
------------------------
It's easy, and it's free! Just click on this button:

|heroku-deploy|

You can leave all the fields at their default values: we'll fill them in later.
The only thing that matters right now is the app name, and Heroku will
autogenerate a name for you if you leave that field blank. Using an
autogenerated name is perfectly fine, just take note of what it is.

Note that your app isn't functional yet, and if you try to visit it right now,
you'll end up at a Slack error page. That's OK, we're not done yet!

Step 2: Get OAuth credentials from Slack
----------------------------------------
Visit the Slack API page at https://api.slack.com/, click on "My Apps" at the
top, and create a new application. You can fill in most of the fields however
you want, but the "Redirect URI(s)" field is special. To fill it out, you'll
need that app name from Heroku. The correct redirect URI is
``https://APPNAME.herokuapp.com/login/slack/authorized``. For example,
if Heroku assigned you an app name of ``peaceful-lake``, your redirct URI must be
``https://peaceful-lake.herokuapp.com/login/slack/authorized``. Once you've
filled in all of the fields, click "Create Application".
Slack will give you a client ID and client secret,
which we'll use in the next step.

Step 3: Give OAuth credentials to your app on Heroku
----------------------------------------------------
Go to Heroku and visit the settings page for your app. (You can get there from
your Heroku dashboard, or by clicking on the "Manage App" button after the
deploy step is finished.) On that page, there should be a section called
"Config Variables" where you can manage the config vars for your application.
You'll need click the "Reveal Config Vars" button to see which variables
are available, and then the "Edit" button to allow you to change these variables.

Take the client ID you got from Slack, and paste it into the "VALUE" field
next to the ``SLACK_OAUTH_CLIENT_ID`` field, replacing the dummy value that
was there before. Similarly, take the client secret you got from Slack,
and paste it into the "VALUE" field next to the ``SLACK_OAUTH_CLIENT_SECRET``
field, replacing the dummy value that was there before.
Click the "Save" button when you're done.

Step 4: Visit your app and connect to Slack team!
-------------------------------------------------
Your app name from Heroku will determine the URL that your app is running on:
the URL will be ``https://APPNAME.herokuapp.com``. For example, if Heroku
assigned you an app name of ``peaceful-lake``, your app will be available at
``https://peaceful-lake.herokuapp.com``. Visit that URL, and you should
immediately be redirected to connect your Slackbot to your Slack team!

Local Installation
``````````````````
If you'd prefer to run this locally on your computer, you can do that as well.

Step 1: Get OAuth credentials from Slack
----------------------------------------
Visit the Slack API page at https://api.slack.com/, click on "My Apps" at the
top, and create a new application. You can fill in most of the fields however
you want, but you must set the "Redirect URI(s)" field to
``http://localhost:5000/login/slack/authorized``. Once you've
filled in all of the fields, click "Create Application".
Slack will give you a client ID and client secret,
which we'll use in step 3.

Step 2: Install code and dependencies
-------------------------------------
Run the following commands on your computer::

    git clone https://github.com/singingwolfboy/flask-dance-slack.git
    cd flask-dance-slack
    pyvenv venv
    source venv/bin/activate
    pip install -r requirements.txt

These commands will clone this git repository onto your computer,
create a `virtual environment`_ for this project, activate it, and install
the dependencies listed in ``requirements.txt``.

Step 3: Set environment variables
---------------------------------
Many applications use `environment variables`_ for configuration, and
Flask-Dance is no exception. You'll need to set the following environment
variables:

* ``SLACK_OAUTH_CLIENT_ID``: set this to the client ID you got from Slack.
* ``SLACK_OAUTH_CLIENT_SECRET``: set this to the client secret you got from Slack.
* ``OAUTHLIB_RELAX_TOKEN_SCOPE``: set this to ``true``. This indicates that
  it's OK for Slack to return different OAuth scopes than requested; Slack
  does that sometimes.
* ``OAUTHLIB_INSECURE_TRANSPORT``: set this to ``true``. This indicates that
  you're doing local testing, and it's OK to use HTTP instead of HTTPS for
  OAuth. You should only do this for local testing.
  Do **not** set this in production! [`oauthlib docs`_]

How you set these variables depends on your operating system. For Mac/Linux, you
can use the `export`_ command. For Windows, you can use the `SET`_ command. If
you don't want to worry about this, you can create a ``.env`` file with
your environment variables, and use `foreman`_ to run your app. This repository
has a ``.env.example`` file that you can copy.

Step 4: Run your app and connect to Slack team!
-----------------------------------------------
If you're setting environment variables manually, run your app using Python::

    python slack.py

If you're using a ``.env`` file for your environment variables, install `foreman`_
and use that to run your app::

    foreman start

Then, go to http://localhost:5000/ to visit your app and connect it to your
Slack team!

Learn more!
```````````
`Fork this GitHub repo`_ so that you can make changes to it. Read the
documentation for `Flask`_ and `Flask-Dance`_ to learn what's possible.
Ask questions, learn as you go, build your own OAuth-enabled web application,
and don't forget to be awesome!


.. _Flask: http://flask.pocoo.org/docs/
.. _Flask-Dance: http://flask-dance.readthedocs.org/
.. _Slack: https://slack.com/
.. _Heroku: https://www.heroku.com/
.. _environment variables: https://en.wikipedia.org/wiki/Environment_variable
.. _oauthlib docs: http://oauthlib.readthedocs.org/en/latest/oauth2/security.html#envvar-OAUTHLIB_INSECURE_TRANSPORT
.. _export: http://ss64.com/bash/export.html
.. _SET: http://ss64.com/nt/set.html
.. _foreman: https://github.com/ddollar/foreman
.. _virtual environment: https://docs.python.org/3.5/library/venv.html
.. _Fork this GitHub repo: https://help.github.com/articles/fork-a-repo/

.. |heroku-deploy| image:: https://www.herokucdn.com/deploy/button.png
   :target: https://heroku.com/deploy
   :alt: Deploy to Heroku

